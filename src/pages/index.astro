---
import Base from "../layouts/Base.astro";
import { listEditionParams, listCompetitions } from "../lib/queries";

const base = import.meta.env.BASE_URL;

const params = listEditionParams();  // {comp, year|null, short_label|null}[]

// 大会ラベルと並び順は listCompetitions() から組み立てる
const comps = listCompetitions(); // [{key,name,sort_order}]
const labels = Object.fromEntries(comps.map(c => [c.key, c.name])); // key→name
const compOrder = comps.map(c => c.key); // 並び順（sort_order→key）

// Mapで収集
// comp → [ {year, short_label}... ] にまとめる
const groups = new Map<string, {year:number|null; short_label:string|null}[]>();
for (const { comp, year, short_label } of params) {
  if (!groups.has(comp)) groups.set(comp, []);
  groups.get(comp)!.push({ year: (year ?? null), short_label: (short_label ?? null) });
}
---
<Base title="お笑い主要データまとめ">
  <h1>お笑い主要データまとめ</h1>
  <div class="card">
    <p class="muted">
      お笑い賞レースの年別結果と、芸人ごとの戦績を横断して参照できる非公式データ集です。
    </p>
    <details class="scope-details">
      <!-- <p class="muted">
        現状の収録範囲:
      </p> -->
      <summary class="scope-summary">
        <svg class="chev" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
          <path d="M8.5 5.5L16 12l-7.5 6.5" fill="none" stroke="currentColor" stroke-width="2"
                stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        <span>現状の収録範囲</span>
      </summary>
      <ul class="muted scope-list">
        <li>M-1／THE MANZAI／KOC／R-1／ABC（2012〜）／ツギクル 全大会の決勝結果（順位／キャッチコピー／1本目出順／1本目結果／2本目出順／2本目結果）</li>
        <li>NHK新人お笑い大賞／ラフターナイト の決勝順位</li>
        <li>KOC 2013〜2025／しずる の決勝ネタ</li>
        <li>M-1 2015〜2024 1本目／KOC 2015〜2025 1・2本目／R-1 2021〜2025 1本目／ABC 2012〜2015 の審査員別得点</li>
        <li>M-1 全大会の準決勝進出組</li>
      </ul>
    </details>
  </div>

  {compOrder
    .filter((c) => groups.has(c))
    .map((c) => {
      const list = groups.get(c)!;
      // 年降順（NULLは最後）
      list.sort((a,b) =>
        a.year == null ? (b.year == null ? 0 : 1)
        : (b.year == null ? -1 : b.year - a.year)
      );
      return (
        <section>
          <h2>{labels[c]}</h2>
          <ul>
            {list.map(({year, short_label}) => {
              const label = short_label ?? (year != null ? `${year}` : "（回次未設定）");
              // year があるものだけリンク、無ければテキスト
              return (
                <li>
                  {year != null
                    ? <a href={`${base}${c}/${year}`}>{label} 決勝結果</a>
                    : <span class="muted">{label} 決勝結果</span>}
                </li>
              );
            })}
          </ul>
          <p><a href={`${base}${c}`}>→ {labels[c]} 年別結果一覧</a></p>
        </section>
      );
    })}
</Base>
